\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\abx@aux@refcontext{nty/global//global/global/global}
\providecommand \oddpage@label [2]{}
\abx@aux@cite{0}{August98}
\abx@aux@segm{0}{0}{August98}
\abx@aux@cite{0}{lin2019branch}
\abx@aux@segm{0}{0}{lin2019branch}
\abx@aux@cite{0}{Lattner2004LLVM}
\abx@aux@segm{0}{0}{Lattner2004LLVM}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{3}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}The cost of branch misprediction}{3}{subsection.1.1}\protected@file@percent }
\newlabel{sec:costo_of_branch_prediction}{{1.1}{3}{The cost of branch misprediction}{subsection.1.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Branch Misprediction Penalty}}{4}{table.caption.6}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{tab:misprediction_penalty}{{1}{4}{Branch Misprediction Penalty}{table.caption.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Compilation techniques to improve IPC}{4}{subsection.1.2}\protected@file@percent }
\abx@aux@cite{0}{chang95}
\abx@aux@segm{0}{0}{chang95}
\abx@aux@cite{0}{10.1145/161541.159765}
\abx@aux@segm{0}{0}{10.1145/161541.159765}
\abx@aux@cite{0}{639244}
\abx@aux@segm{0}{0}{639244}
\@writefile{toc}{\contentsline {section}{\numberline {2}Speculation}{5}{section.2}\protected@file@percent }
\newlabel{sec:speculation}{{2}{5}{Speculation}{section.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Example}{5}{subsection.2.1}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}{\ignorespaces Example Conditional Load}}{5}{listing.caption.7}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}{\ignorespaces Example Speculative Load}}{5}{listing.caption.8}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}{\ignorespaces Example Instructions Conditional Load}}{5}{listing.caption.9}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}{\ignorespaces Example Instructions Speculative Load}}{5}{listing.caption.10}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Superblock Structure}{5}{subsection.2.2}\protected@file@percent }
\abx@aux@cite{0}{chang95}
\abx@aux@segm{0}{0}{chang95}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Trace with Side Entrance}}{6}{figure.caption.11}\protected@file@percent }
\newlabel{fig:controlflow_side_enterance}{{1}{6}{Trace with Side Entrance}{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Superblock Example}}{6}{figure.caption.12}\protected@file@percent }
\newlabel{fig:controlflow_superblock}{{2}{6}{Superblock Example}{figure.caption.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Superblock Scheduling}{7}{subsection.2.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Speculative Code Motion Models}{7}{subsection.2.4}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}{\ignorespaces Default Example Downward Motion}}{7}{listing.caption.13}\protected@file@percent }
\newlabel{ls:ls_downward_default}{{5}{7}{Default Example Downward Motion}{listing.caption.13}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}{\ignorespaces Downward Motion with Copy}}{7}{listing.caption.14}\protected@file@percent }
\abx@aux@cite{0}{lin2019branch}
\abx@aux@segm{0}{0}{lin2019branch}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}{\ignorespaces Default Example Upward Motion}}{8}{listing.caption.15}\protected@file@percent }
\newlabel{ls:ls_upward_default}{{7}{8}{Default Example Upward Motion}{listing.caption.15}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}{\ignorespaces Faulty Upward Motion }}{8}{listing.caption.16}\protected@file@percent }
\newlabel{ls:ls_upward_faulty}{{8}{8}{Faulty Upward Motion}{listing.caption.16}{}}
\@writefile{toc}{\contentsline {paragraph}{Restriction 1:}{8}{section*.17}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Restriction 2:}{8}{section*.18}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}Predication}{8}{section.3}\protected@file@percent }
\newlabel{sec:predication}{{3}{8}{Predication}{section.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Replacing a conditional branch with arithmetic operations.}}{8}{figure.caption.19}\protected@file@percent }
\newlabel{fig:branching_predication_example}{{3}{8}{Replacing a conditional branch with arithmetic operations}{figure.caption.19}{}}
\abx@aux@cite{0}{chaitin1981register}
\abx@aux@segm{0}{0}{chaitin1981register}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}{\ignorespaces Standard MOV in ARMv7 assembly}}{9}{lstlisting.9}\protected@file@percent }
\newlabel{lst:add}{{3}{9}{Predication}{lstnumber.9.1}{}}
\newlabel{lst:cadd}{{3}{9}{Predication}{lstnumber.10.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Branching versus predication in ARM assembly}}{9}{figure.caption.20}\protected@file@percent }
\newlabel{fig:branching_predication_ARM}{{4}{9}{Branching versus predication in ARM assembly}{figure.caption.20}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}How is predication achieved in the architecture}{10}{subsection.3.1}\protected@file@percent }
\newlabel{sec:arch_support}{{3.1}{10}{How is predication achieved in the architecture}{subsection.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Bit-level encoding of \texttt  {ARMv7}'s \texttt  {MOVGT} (on top) and of \texttt  {MOV} (on the bottom) instructions, illustrating fields for condition codes, opcode, status bit, register operands, and operand values.}}{10}{figure.caption.21}\protected@file@percent }
\newlabel{fig:mov_encoding}{{5}{10}{Bit-level encoding of \texttt {ARMv7}'s \texttt {MOVGT} (on top) and of \texttt {MOV} (on the bottom) instructions, illustrating fields for condition codes, opcode, status bit, register operands, and operand values}{figure.caption.21}{}}
\newlabel{lst:itanium_predicated}{{11}{10}{Predicated MOV in Itanium}{lstlisting.11}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {11}{\ignorespaces Predicated MOV in Itanium}}{10}{lstlisting.11}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Detecting Predicable Regions}{11}{subsection.3.2}\protected@file@percent }
\newlabel{sec:detecting_pred}{{3.2}{11}{Detecting Predicable Regions}{subsection.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Simplified version of \textit  {LLVM}'s \texttt  {AnalyzeBlock} implementation for \texttt  {ARM} architectures.}}{11}{figure.caption.22}\protected@file@percent }
\newlabel{fig:analyze_block}{{6}{11}{Simplified version of \textit {LLVM}'s \texttt {AnalyzeBlock} implementation for \texttt {ARM} architectures}{figure.caption.22}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces The C++ code on the left, has a EBB, a TBB and a fall through FBB. When compiled it gives origin to the triangular branch on the right.}}{12}{figure.caption.23}\protected@file@percent }
\newlabel{fig:triangle_branch}{{7}{12}{The C++ code on the left, has a EBB, a TBB and a fall through FBB. When compiled it gives origin to the triangular branch on the right}{figure.caption.23}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Logic used in \textit  {LLVM} to decide if a block is too big to be predicated.}}{12}{figure.caption.24}\protected@file@percent }
\newlabel{fig:predication_size}{{8}{12}{Logic used in \textit {LLVM} to decide if a block is too big to be predicated}{figure.caption.24}{}}
\abx@aux@cite{0}{August98}
\abx@aux@segm{0}{0}{August98}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Comparison of assembly code and control flow graphs (CFGs) for \texttt  {triangleBranch}: original code with branching versus optimized code with predication, demonstrating CFG simplification.}}{13}{figure.caption.25}\protected@file@percent }
\newlabel{fig:triangle_asm}{{9}{13}{Comparison of assembly code and control flow graphs (CFGs) for \texttt {triangleBranch}: original code with branching versus optimized code with predication, demonstrating CFG simplification}{figure.caption.25}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Compiler's Heuristics}{13}{subsection.3.3}\protected@file@percent }
\newlabel{sec:compiler_heuristics}{{3.3}{13}{Compiler's Heuristics}{subsection.3.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Portion of code where the cost of predicating a Basic Block is calculated in \textit  {LLVM}.}}{14}{figure.caption.26}\protected@file@percent }
\newlabel{lst:predication_cost}{{10}{14}{Portion of code where the cost of predicating a Basic Block is calculated in \textit {LLVM}}{figure.caption.26}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces \textit  {LLVM}'s \texttt  {isProfitableToIfCvt} implementation for \texttt  {ARM} architectures.}}{14}{figure.caption.27}\protected@file@percent }
\newlabel{lst:predications_heuristic}{{11}{14}{\textit {LLVM}'s \texttt {isProfitableToIfCvt} implementation for \texttt {ARM} architectures}{figure.caption.27}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Predication Benchmarks}{15}{subsection.3.4}\protected@file@percent }
\newlabel{sec:predication_benchmark}{{3.4}{15}{Predication Benchmarks}{subsection.3.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Predication and Speculation}{16}{section.4}\protected@file@percent }
\newlabel{sec:predication_and_speculation}{{4}{16}{Predication and Speculation}{section.4}{}}
\abx@aux@read@bbl@mdfivesum{932253C3AC774A882166FD7FC7D17902}
\abx@aux@defaultrefcontext{0}{August98}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{chaitin1981register}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{chang95}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{639244}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{Lattner2004LLVM}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{lin2019branch}{nty/global//global/global/global}
\abx@aux@defaultrefcontext{0}{10.1145/161541.159765}{nty/global//global/global/global}
\gdef \@abspage@last{18}
